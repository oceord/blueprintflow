[build-system]
requires = ["setuptools>=70.0.0", "incremental"]
build-backend = "setuptools.build_meta"

[project]
dynamic = ["version", "readme"]
name = "blueprintflow"
license = { file = "LICENSE" }
description = "Simplify code generation via abstractions and structured retrieval"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Code Generators",
    "Development Status :: 1 - Planning",
]
authors = [{ name = "oceord" }]
requires-python = ">=3.12,<3.14"
dependencies = ["incremental", "pydantic>=2.0.0,<3.0.0"]

[project.urls]
Repository = "https://github.com/oceord/blueprintflow"

[tool.incremental]

[tool.setuptools.dynamic]
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.mypy]
allow_redefinition = true
disallow_untyped_defs = true
ignore_missing_imports = true
install_types = true
local_partial_types = true
show_column_numbers = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.ruff]
exclude = [
    "src/blueprintflow/_version.py", # handled by incremental
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # Allow public structures without docstrings
    "D100", # undocumented-public-module
    # "D101", # undocumented-public-class
    # "D102", # undocumented-public-method
    # "D103", # undocumented-public-function
    "D104", # undocumented-public-package
    # "D105", # undocumented-magic-method
    # "D106", # undocumented-public-nested-class
    # "D107", # undocumented-public-init
    # Ignore rules fixed by the formatter
    "COM812", # missing-trailing-comma
]

[tool.ruff.lint.extend-per-file-ignores]
"*.ipynb" = [
    # Allow public structures without docstrings
    "D100", # undocumented-public-module
    "D101", # undocumented-public-class
    "D102", # undocumented-public-method
    "D103", # undocumented-public-function
    "D104", # undocumented-public-package
    "D105", # undocumented-magic-method
    "D106", # undocumented-public-nested-class
    "D107", # undocumented-public-init
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "google"
